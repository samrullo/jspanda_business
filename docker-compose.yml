version: "3.4"

services:
  jspanda:
    container_name: "jspanda"
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - postgres        
    environment:
      SECRET_KEY: JSPANDA_SECRET
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@postgres:5432/jspanda"
      CFLAGS: -Qunused-arguments
      CPPFLAGS: -Qunused-arguments
      FLASK_ENV: production
      TOKEN_EXPIRATION: 3600
    networks:
      - jspanda-networks
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  postgres:
    container_name: "postgres"
    build:
      context: .
      dockerfile: postgres.dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: jspanda
    volumes:
      - ./postgres_data/db_dumps/:/var/dump
      - ./postgres_data/data/:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d jspanda"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - jspanda-networks
networks:
  jspanda-networks:
    driver: bridge
